Object subclass: #GestorEmpleos	instanceVariableNames: 'colEmpresasSolicitantes colPostulantes colPropuestas colSolicitudesPendientes colSolicitudesResueltas'	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Logica'!!GestorEmpleos methodsFor: 'registrar empresa solicitante' stamp: 'LeonelBustamante 8/28/2021 19:30'!registrarEmpresaSolicitante: unaEmpresa	"Se recibe desde la interfaz grafica unaEmpresa creada y se carga en la coleccion"	colEmpresasSolicitantes isEmpty		ifTrue: [ colEmpresasSolicitantes add: unaEmpresa ]		ifFalse: [ 			(colEmpresasSolicitantes anySatisfy: [ :x | 				 unaEmpresa getNombre = x getNombre ]) ifFalse: [ 				colEmpresasSolicitantes add: unaEmpresa ] ].! !!GestorEmpleos methodsFor: 'registrar solicitud' stamp: 'LeonelBustamante 8/29/2021 09:40'!registrarSolicitud: unaSolicitud	"Se recibe desde la interfaz grafica unaSolicitud creada y se carga en la coleccion"colSolicitudesPendientes add: unaSolicitud.! !!GestorEmpleos methodsFor: 'getters' stamp: 'LeonelBustamante 8/29/2021 20:38'!colToString: unaColeccion	| txt |	txt := ' '.	unaColeccion do: [ :each | txt := txt , each toString , String cr ].	^ txt! !!GestorEmpleos methodsFor: 'getters' stamp: 'LeonelBustamante 8/26/2021 18:29'!getColPropuestas	^ colPropuestas! !!GestorEmpleos methodsFor: 'getters' stamp: 'LeonelBustamante 8/29/2021 17:16'!getColSolicitudesPendientes	^ self colToString: colSolicitudesPendientes ! !!GestorEmpleos methodsFor: 'getters' stamp: 'LeonelBustamante 8/26/2021 18:28'!getColSolicitudesResueltas	^ colSolicitudesResueltas! !!GestorEmpleos methodsFor: 'getters' stamp: 'LeonelBustamante 8/28/2021 11:04'!getColEmpresasSolicitantes	^ self colToString: colEmpresasSolicitantes ! !!GestorEmpleos methodsFor: 'getters' stamp: 'LeonelBustamante 8/26/2021 18:29'!getColPostulantes	^ colPostulantes! !!GestorEmpleos methodsFor: 'initialization' stamp: 'LeonelBustamante 8/29/2021 19:55'!iniciarGestorEmpleo	colEmpresasSolicitantes := OrderedCollection new.	colPostulantes := OrderedCollection new.	colPropuestas := OrderedCollection new.	colSolicitudesPendientes := SortedCollection sortUsing: [ :elem1 :elem2 | 		                            elem1 getFecha isOnOrBefore:  elem2 getFecha ].	colSolicitudesResueltas := OrderedCollection new! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GestorEmpleos class	instanceVariableNames: 'model'!!GestorEmpleos class methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/29/2021 19:16'!crear	| gestor |	gestor := self new.	gestor iniciarGestorEmpleo.	Solicitud setID: 1.	^ gestor! !Object subclass: #Postulante	instanceVariableNames: 'nombre'	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Logica'!!Postulante methodsFor: 'initialization' stamp: 'LeonelBustamante 8/26/2021 18:30'!iniciarPostulanteNombre: unNombre"Postulante es abstracta"	nombre := unNombre! !!Postulante methodsFor: 'getters' stamp: 'LeonelBustamante 8/26/2021 18:28'!getNombre	^ nombre! !Postulante subclass: #Empresa	instanceVariableNames: 'rubro puntos'	classVariableNames: 'MAXIMO'	package: 'PromocionPOO2021-Logica-Logica'!!Empresa methodsFor: 'initialization' stamp: 'LeonelBustamante 8/26/2021 18:37'!iniciarPostulanteNombre: unNombre rubro: unRubro puntos: unosPuntos	self iniciarPostulanteNombre: unNombre.	rubro := unRubro.	puntos := unosPuntos.	self getMaximo.! !!Empresa methodsFor: 'getters' stamp: 'LeonelBustamante 8/26/2021 18:31'!getRubro	^ rubro! !!Empresa methodsFor: 'getters' stamp: 'LeonelBustamante 8/26/2021 18:31'!getPuntos	^ puntos! !!Empresa methodsFor: 'getters' stamp: 'LeonelBustamante 8/26/2021 18:37'!getMaximo^MAXIMO ! !!Empresa methodsFor: 'printing' stamp: 'LeonelBustamante 8/28/2021 10:56'!toString^ 'Empresa: ', nombre , ' rubro: ', rubro , ' puntos: ', puntos.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Empresa class	instanceVariableNames: ''!!Empresa class methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/28/2021 06:22'!nombre: unNombre rubro: unRubro puntos: unosPuntos	| empresa |	empresa := self new.	empresa		iniciarPostulanteNombre: unNombre		rubro: unRubro		puntos: unosPuntos.	^ empresa! !!Empresa class methodsFor: 'initialization' stamp: 'LeonelBustamante 8/26/2021 18:36'!setMAXIMO: unMAXIMOMAXIMO := unMAXIMO.! !Empresa subclass: #Combinada	instanceVariableNames: 'colProductos'	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Logica'!!Combinada methodsFor: 'printing' stamp: 'LeonelBustamante 8/28/2021 20:24'!toString	^ 'Empresa combinada: ' , nombre , ' rubro: ' , rubro , ' puntos: ' , puntos! !!Combinada methodsFor: 'getters' stamp: 'LeonelBustamante 8/26/2021 18:47'!getColProductos	^ colProductos! !!Combinada methodsFor: 'initialization' stamp: 'LeonelBustamante 8/26/2021 18:48'!iniciarPostulanteNombre: unNombre  rubro: unRubro  puntos: unosPuntos colProductos: unaColProductosself iniciarPostulanteNombre: unNombre rubro:  unRubro puntos: unosPuntos .colProductos := unaColProductos.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Combinada class	instanceVariableNames: ''!!Combinada class methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/28/2021 19:10'!nombre: unNombre rubro: unRubro puntos: unosPuntos colProductos: unaColProductos	| empresa |	empresa := self new.	empresa		iniciarPostulanteNombre: unNombre rubro: unRubro puntos: unosPuntos colProductos: unaColProductos.	^ empresa! !Postulante subclass: #Persona	instanceVariableNames: 'colAptitudes'	classVariableNames: 'MAXIMOINDIVIDUAL'	package: 'PromocionPOO2021-Logica-Logica'!!Persona methodsFor: 'initialization' stamp: 'LeonelBustamante 8/26/2021 18:46'!iniciarPostulanteNombre: unNombre aptitudes: unaColAptitudesself iniciarPostulanteNombre: unNombre.	colAptitudes := unaColAptitudes.	self getMaximoIndividual! !!Persona methodsFor: 'getters' stamp: 'LeonelBustamante 8/26/2021 18:39'!getColAptitudes	^ colAptitudes! !!Persona methodsFor: 'getters' stamp: 'LeonelBustamante 8/26/2021 18:43'!getMaximoIndividual ^MAXIMOINDIVIDUAL ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Persona class	instanceVariableNames: ''!!Persona class methodsFor: 'initialization' stamp: 'LeonelBustamante 8/26/2021 18:44'!setMaximoIndividual: unMAXIMOINDIVIDUALMAXIMOINDIVIDUAL := unMAXIMOINDIVIDUAL ! !!Persona class methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/26/2021 18:43'!nombre: unNombre aptitudes: unaColAptitudes	| persona |	persona := self new.	persona iniciarPostulanteNombre: unNombre aptitudes: unaColAptitudes.	^ persona! !Object subclass: #Propuesta	instanceVariableNames: 'solicitud postulante'	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Logica'!!Propuesta methodsFor: 'initialization'!iniciarPropuestaPostulante: unPostulante solicitud: unaSolicitudpostulante := unPostulante .solicitud := unaSolicitud ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Propuesta class	instanceVariableNames: ''!!Propuesta class methodsFor: 'as yet unclassified'!postulante: unPostulante	solicitud: unaSolicitud	|nuevaPropuesta |	nuevaPropuesta := self new.	nuevaPropuesta iniciarPropuestaPostulante: unPostulante solicitud: unaSolicitud.	^nuevaPropuesta ! !Object subclass: #Solicitud	instanceVariableNames: 'id fecha tipoPago valor descripcion'	classVariableNames: 'IDContador'	package: 'PromocionPOO2021-Logica-Logica'!!Solicitud methodsFor: 'getters' stamp: 'LeonelBustamante 8/26/2021 19:02'!getFecha	^ fecha! !!Solicitud methodsFor: 'getters' stamp: 'LeonelBustamante 8/26/2021 19:02'!getDescripcion	^ descripcion! !!Solicitud methodsFor: 'getters' stamp: 'LeonelBustamante 8/26/2021 19:02'!getValor	^ valor! !!Solicitud methodsFor: 'getters' stamp: 'LeonelBustamante 8/26/2021 19:02'!getTipoPago	^ tipoPago! !!Solicitud methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/29/2021 19:57'!iniciarSolicitudDescripcion: unaDescripcion valor: unValor	id := IDContador.	descripcion := unaDescripcion.	fecha:= Date today.	valor := unValor.	tipoPago := 'Mensual'.	IDContador := IDContador + 1! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Solicitud class	instanceVariableNames: ''!!Solicitud class methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/29/2021 18:56'!actualizarIDIDContador:= IDContador + 1.! !!Solicitud class methodsFor: 'initialization' stamp: 'LeonelBustamante 8/29/2021 18:51'!setID: unNumero	IDContador := unNumero! !Solicitud subclass: #DeServicio	instanceVariableNames: 'duracionServicio'	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Logica'!!DeServicio methodsFor: 'initialization' stamp: 'LeonelBustamante 8/29/2021 16:31'!iniciarSolicituDescripcion: unaDescripcion duracion: unaDuracion valor: unValor tipoPago: unTipoPago	self iniciarSolicitudDescripcion: unaDescripcion valor: unValor.	tipoPago := unTipoPago.	duracionServicio := unaDuracion! !!DeServicio methodsFor: 'printing' stamp: 'LeonelBustamante 8/29/2021 19:56'!toString	^ 'Solicitud ID: ' , id asString, ' descripcion: ' , descripcion	  , ' tipo de pago: ' , tipoPago , ' valorTotal: ' , valor	  , ' duracion servicio: ' , duracionServicio asString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DeServicio class	instanceVariableNames: ''!!DeServicio class methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/29/2021 18:50'!descripcion: unaDescripcion duracion: unaDuracion valor: unValor tipoPago: unTipoPago	| nuevaSol |	nuevaSol := self new.	nuevaSol		iniciarSolicituDescripcion: unaDescripcion		duracion: unaDuracion		valor: unValor		tipoPago: unTipoPago.	^ nuevaSol! !DeServicio subclass: #ConProductos	instanceVariableNames: 'colCestaProductos'	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Logica'!!ConProductos methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/29/2021 16:36'!iniciarSolicituDescripcion: unaDescripcion duracion: unaDuracion valor: unValor tipoPago: unTipoPago colCestaProductos: unaColeccion 	self		iniciarSolicituDescripcion: unaDescripcion		duracion: unaDuracion		valor: unValor		tipoPago: unTipoPago.	colCestaProductos := unaColeccion! !!ConProductos methodsFor: 'accessing' stamp: 'LeonelBustamante 8/29/2021 10:03'!getColCestaProductos	^ colCestaProductos! !!ConProductos methodsFor: 'printing' stamp: 'LeonelBustamante 8/29/2021 19:51'!toString	^ 'SolicitudConProductos ID: ' , id asString  , ' descripcion: '	  , descripcion , ' tipo de pago: ' , tipoPago , ' valorTotal: '	  , valor , ' duracion servicio: ' , duracionServicio! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ConProductos class	instanceVariableNames: ''!!ConProductos class methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/29/2021 18:51'!descripcion: unaDescripcion duracion: unaDuracion valor: unValor tipoPago: unTipoPago colCestaProductos: unaColeccion	| nuevaSol |	nuevaSol := self new.	IDContador := self getID.	nuevaSol		iniciarSolicituDescripcion: unaDescripcion duracion: unaDuracion valor: unValor tipoPago: unTipoPago colCestaProductos: unaColeccion.	^ nuevaSol! !Solicitud subclass: #DeTrabajo	instanceVariableNames: ''	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Logica'!!DeTrabajo methodsFor: 'printing' stamp: 'LeonelBustamante 8/29/2021 22:02'!toString	^ 'Solicitud ID: ' , id asString , ' descripcion: ' , descripcion	  , ' tipo de pago: ' , tipoPago , ' valorTotal: ' , valor! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DeTrabajo class	instanceVariableNames: ''!!DeTrabajo class methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/29/2021 22:01'!descripcion: unaDescripcion valor: unValor	| nuevaSol |	nuevaSol := self new.	nuevaSol iniciarSolicitudDescripcion: unaDescripcion valor: unValor.	^ nuevaSol! !FullscreenMorph subclass: #GE	instanceVariableNames: 'miGestor botonRegistroEmpresa botonRegistroSolicitud botonRegistroPostulante botonGenerarPropuesta botonAceptarPropuesta botonGenerarListado botonControlFisco exit'	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Visual'!!GE methodsFor: 'initialization' stamp: 'LeonelBustamante 8/29/2021 09:17'!initialize	"Inicializador de pantalla principal"	super initialize.	miGestor := GestorEmpleos crear.	self		agregarFondo;		agregarLogo;		agregarBotones! !!GE methodsFor: 'deAplicacion' stamp: 'LeonelBustamante 8/28/2021 04:43'!cerrar"Funcion del boton cerrar"	self delete! !!GE methodsFor: 'deAplicacion' stamp: 'LeonelBustamante 8/29/2021 01:22'!agregarBotones	"Agregar Botones"	botonRegistroEmpresa := Boton		                        nombre: 'Registrar Empresa Solicitante'		                        tamanio: 405 @ 90.	botonRegistroSolicitud := Boton		                          nombre: 'Registrar Solicitudes'		                          tamanio: 405 @ 90.	botonRegistroPostulante := Boton		                           nombre: 'Registrar Postulantes'		                           tamanio: 405 @ 90.	botonAceptarPropuesta := Boton		                         nombre: 'Aceptar Propuesta'		                         tamanio: 405 @ 90.	botonGenerarPropuesta := Boton		                         nombre: 'Generar Propuesta'		                         tamanio: 405 @ 90.	botonGenerarListado := Boton		                       nombre: 'Generar Listado'		                       tamanio: 405 @ 90.	"Asignacion de fuente a botones"	botonRegistroEmpresa font: (LogicalFont			 familyName: StandardFonts defaultFont familyName			 pointSize: 15).	botonRegistroSolicitud font: (LogicalFont			 familyName: StandardFonts defaultFont familyName			 pointSize: 15).	botonRegistroPostulante font: (LogicalFont			 familyName: StandardFonts defaultFont familyName			 pointSize: 15).	botonGenerarPropuesta font: (LogicalFont			 familyName: StandardFonts defaultFont familyName			 pointSize: 15).	botonAceptarPropuesta font: (LogicalFont			 familyName: StandardFonts defaultFont familyName			 pointSize: 15).	botonGenerarListado font: (LogicalFont			 familyName: StandardFonts defaultFont familyName			 pointSize: 15).	"Los agrego a la inteface"	self addMorph: botonRegistroEmpresa.	self addMorph: botonRegistroSolicitud.	self addMorph: botonRegistroPostulante.	self addMorph: botonGenerarPropuesta.	self addMorph: botonAceptarPropuesta.	self addMorph: botonGenerarListado.	"Estilo y posicionamiento de botones"	botonRegistroEmpresa		left: 30;		top: 250;		centerText;		mouseAction: [ 			VentanaRegistrarEmpresa				titulo: 'Registrando una empresa solicitante'				gestor: miGestor ].	botonRegistroSolicitud		left: 30;		top: 350;		centerText;		mouseAction: [ 			VentanaRegistrarSolicitud titulo: 'Elija un tipo de solicitud' 				gestor: miGestor].	botonRegistroPostulante		left: 30;		top: 450;		centerText;		mouseAction: [ 			VentanaRegistrarPostulante titulo: 'Elija un tipo de postulante' ].	botonGenerarPropuesta		left: 30;		top: 550;		centerText;		mouseAction: [ 			VentanaGenerarPropuesta titulo:					'Generar Propuestas a Solicitudes Pendientes' ].	botonAceptarPropuesta		left: 30;		top: 650;		centerText;		mouseAction: [ 			VentanaAceptarPropuesta titulo: 'Aceptar Propuesta a solicitud ' ].	botonGenerarListado		left: 30;		top: 750;		centerText;		mouseAction: [ 			VentanaGenerarListado titulo: 'Elija tipo de listado' ].	"Boton cerrar"	exit := Boton nombre: 'exit' tamanio: 60 @ 30.	self addMorph: exit.	exit		left: 30;		top: 30;		mouseAction: [ self cerrar ]! !!GE methodsFor: 'deAplicacion' stamp: 'LeonelBustamante 8/28/2021 04:41'!agregarFondo "Agregar fondo"	| fondo |	fondo := (Form fromFileNamed: 'C:\Programas Leo\Pharo\Background.jpg')		         asMorph. 	fondo basicExtent: self extent. 	self addMorphBack: fondo! !!GE methodsFor: 'deAplicacion' stamp: 'LeonelBustamante 8/28/2021 04:41'!agregarLogo "Agregar Logo"	| logo |	logo := 'TrabajoAr' asMorph.	logo font: (LogicalFont familyName: 'Zen Tokyo Zoo' pointSize: 60).	self addMorph: logo.	"Posicion"	logo left: 30.	logo top: 150! !BorderedMorph subclass: #Ventana	instanceVariableNames: 'exit'	classVariableNames: 'miGestor'	package: 'PromocionPOO2021-Logica-Visual'!!Ventana methodsFor: 'initialization' stamp: 'LeonelBustamante 8/11/2021 18:16'!initialize	super initialize.	self beSticky .	self estilo.	self botonCerrar! !!Ventana methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/8/2021 19:17'!estilo	self extent: 1400 @ 800.	self color: Color transparent.	self borderColor: Color transparent! !!Ventana methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/3/2021 13:05'!cerrar	self delete.! !!Ventana methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/3/2021 13:17'!agregarTitulo: aString	| titulo |	titulo := Texto titulo:aString.	self addMorph: titulo! !!Ventana methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/28/2021 04:57'!botonCerrar	exit := Boton nombre: 'X' tamanio: 30 @ 30.	self addMorph: exit.	exit left: self right - 100.	exit top: 30.	exit mouseAction: [ self cerrar ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Ventana class	instanceVariableNames: ''!!Ventana class methodsFor: 'constructor' stamp: 'LeonelBustamante 8/28/2021 10:44'!titulo: unTitulo gestor: unGestor	"Constructor de las ventanas"	| temp |	temp := self new.	miGestor := unGestor.	temp		initialize;		agregarTitulo: unTitulo;		openCenteredInWorld;		left: 550! !Ventana subclass: #VentanaAceptarPropuesta	instanceVariableNames: 'inputID'	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Visual'!!VentanaAceptarPropuesta methodsFor: 'initialization' stamp: 'LeonelBustamante 8/4/2021 10:38'!initialize: aString	self initialize.	self agregarTitulo: aString.	self agregarCampos .	self agregarBoton! !!VentanaAceptarPropuesta methodsFor: 'adding' stamp: 'LeonelBustamante 8/28/2021 04:57'!agregarCampos	| tituloID |	"Creo el contenido"	tituloID := Texto titulo: 'Ingrese numero ID' tamanio: 20.	inputID := TextBox nombre: 'Ingrese numero ID' tamanio: 450 @ 30.	"Agrego los morph"	self addMorph: tituloID.	self addMorph: inputID.	"Posiciones laterales"	tituloID left: self left + 10.	inputID left: self left + 10.	"Posiciones verticales"	tituloID top: self top + 200.	inputID top: tituloID bottom + 20! !!VentanaAceptarPropuesta methodsFor: 'adding' stamp: 'LeonelBustamante 8/28/2021 04:57'!agregarBoton	| botonRegistro |	botonRegistro := Boton nombre: 'Aceptar' tamanio: 200 @ 30.	botonRegistro center: self center.	botonRegistro bottom: self bottom - 10.	botonRegistro color: (Color r: 0.0 g: 0.5 b: 0.8).	botonRegistro borderStyle: (RoundedBorder new			 cornerRadius: 5;			 width: 5;			 color: (Color r: 0.0 g: 0.5 b: 0.8)).	self addMorphCentered:  botonRegistro	"Logic"	"	b1 mouseAction: [ self registrarEmpresa ]"! !Ventana subclass: #VentanaControlFisco	instanceVariableNames: ''	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Visual'!!VentanaControlFisco methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/28/2021 09:48'!ventanaConfirmacion: unBoolean	| panelConfirmacion |	panelConfirmacion := CustomQuestionDialogWindow new.	panelConfirmacion initialize.	unBoolean ifTrue: 	[panelConfirmacion text: 'Se registro con exito'] ifFalse:  [panelConfirmacion text: 'No se registro'].	panelConfirmacion extent: 600 @ 150.	self addMorphCentered: panelConfirmacion! !!VentanaControlFisco methodsFor: 'adding' stamp: 'LeonelBustamante 8/28/2021 04:57'!agregarBoton	| boton |	boton := Boton nombre: 'Controlar Fisco' tamanio: 200 @ 30.	boton center: self center.	boton bottom: self bottom - 10.	boton color: (Color r: 0.0 g: 0.5 b: 0.8).	boton borderStyle: (RoundedBorder new			 cornerRadius: 5;			 width: 5;			 color: (Color r: 0.0 g: 0.5 b: 0.8)).			boton centerText .	self addMorphCentered: boton.	"Logic"	boton mouseAction: [ self ventanaConfirmacion ]! !!VentanaControlFisco methodsFor: 'initialization' stamp: 'LeonelBustamante 8/3/2021 20:57'!initialize: aString	self initialize.	self agregarTitulo: aString.	self agregarBoton! !Ventana subclass: #VentanaGenerarListado	instanceVariableNames: ''	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Visual'!!VentanaGenerarListado methodsFor: 'adding' stamp: 'LeonelBustamante 8/28/2021 04:57'!agregarBoton	| listadoEmpresa listadoFecha listadoResueltas |	listadoEmpresa := Boton		                  nombre: 'Generar Listados por empresa'		                  tamanio: 700 @ 30.	listadoFecha := Boton		                nombre: 'Generar Listados en fecha'		                tamanio: 700 @ 30.	listadoResueltas := Boton		                    nombre: 'Generar Listados solicitudes resueltas'		                    tamanio: 700 @ 30.	listadoEmpresa center: self center.	listadoFecha center: self center.	listadoResueltas center: self center.	listadoEmpresa top: self top + 350.	listadoFecha top: self top + 450.	listadoResueltas top: self top + 550.	listadoEmpresa color: (Color r: 0.0 g: 0.5 b: 0.8).	listadoFecha color: (Color r: 0.0 g: 0.5 b: 0.8).	listadoResueltas color: (Color r: 0.0 g: 0.5 b: 0.8).	listadoEmpresa borderStyle: (RoundedBorder new			 cornerRadius: 5;			 width: 5;			 color: (Color r: 0.0 g: 0.5 b: 0.8)).	listadoFecha borderStyle: (RoundedBorder new			 cornerRadius: 5;			 width: 5;			 color: (Color r: 0.0 g: 0.5 b: 0.8)).	listadoResueltas borderStyle: (RoundedBorder new			 cornerRadius: 5;			 width: 5;			 color: (Color r: 0.0 g: 0.5 b: 0.8)).	self addMorph: listadoEmpresa.	self addMorph: listadoFecha.	self addMorph: listadoResueltas.	"Logic"	listadoEmpresa mouseAction: [ self cerrar ].	listadoFecha mouseAction: [ self cerrar ].	listadoResueltas mouseAction: [ self cerrar ]! !!VentanaGenerarListado methodsFor: 'ARREGLAR' stamp: 'LeonelBustamante 8/6/2021 21:25'!aTabla: aCollection	| nombreColumnas tabla |	nombreColumnas := #( 'Numero ID' 'Fecha' 'Descripcion' )		                  asOrderedCollection.	tabla := Table		         create: aCollection		         aCollums: nombreColumnas		         aSize: 500 @ 200.		self addMorphCentered: tabla ! !!VentanaGenerarListado methodsFor: 'initialization' stamp: 'LeonelBustamante 8/4/2021 10:55'!initialize: aString	self initialize.	self agregarTitulo: aString.	self agregarBoton.! !Ventana subclass: #VentanaGenerarPropuesta	instanceVariableNames: ''	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Visual'!!VentanaGenerarPropuesta methodsFor: 'adding' stamp: 'LeonelBustamante 8/28/2021 04:57'!agregarBoton	| boton |	boton := Boton nombre: 'Generar Propuesta' tamanio: 200 @ 30.	boton center: self center.	boton bottom: self bottom - 10.	boton color: (Color r: 0.0 g: 0.5 b: 0.8).	boton borderStyle: (RoundedBorder new			 cornerRadius: 5;			 width: 5;			 color: (Color r: 0.0 g: 0.5 b: 0.8)).	self addMorphCentered:  boton.	"Logic"	boton mouseAction: [ self ventanaConfirmacion ]! !!VentanaGenerarPropuesta methodsFor: 'initialization' stamp: 'LeonelBustamante 8/3/2021 20:34'!initialize: aString	self initialize.	self agregarTitulo: aString.	self agregarBoton! !!VentanaGenerarPropuesta methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/3/2021 20:56'!ventanaConfirmacion	| panelConfirmacion |	panelConfirmacion := CustomQuestionDialogWindow new.	panelConfirmacion initialize.	panelConfirmacion text:		'¿Esta seguro de generar propuesta para todas las solicitudes pendientes?'.	panelConfirmacion extent: 600 @ 150.	self addMorphCentered: panelConfirmacion! !Ventana subclass: #VentanaRegistrarEmpresa	instanceVariableNames: 'tituloNombre inputNombre tituloRubro inputRubro tituloPuntos inputPuntos tabla tituloProductos checkbox1 checkbox2 checkbox3 checkbox4 checkbox5 checkbox6 checkbox7 checkbox8 checkbox9'	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Visual'!!VentanaRegistrarEmpresa methodsFor: 'adding' stamp: 'LeonelBustamante 8/29/2021 04:00'!agregarLista: aString	"Agrego titulo y lista"	| titulo |	titulo := Texto titulo: aString tamanio: 20.	tabla := RubScrolledTextMorph new.	tabla extent: 380 @ 500; beReadOnly.	self addMorph: titulo.	self addMorph: tabla.	"Posiciono"	titulo		left: self right - 500;		top: 150.	tabla		left: self right - 500;		top: 200! !!VentanaRegistrarEmpresa methodsFor: 'adding' stamp: 'LeonelBustamante 8/29/2021 16:04'!agregarCampos	tituloNombre := Texto titulo: 'Ingrese el nombre' tamanio: 20.	inputNombre := TextBox nombre: 'Ingrese el nombre' tamanio: 450 @ 90.	tituloPuntos := Texto titulo: 'Ingrese los puntos' tamanio: 20.	inputPuntos := TextBox nombre: 'Ingrese puntos' tamanio: 450 @ 90.	self		agregarRubros;		agregarProductos;		addMorph: tituloNombre;		addMorph: inputNombre;		addMorph: tituloPuntos;		addMorph: inputPuntos;		addMorph: tituloProductos.	tituloNombre		top: 150;		left: 10.	inputNombre		top: tituloNombre bottom + 20;		left: 10.	tituloRubro		top: inputNombre  bottom + 20;		left: 10.	checkbox7		top: tituloRubro bottom + 20;		left: 10.	checkbox8		top: tituloRubro bottom + 20;		left: 130.	checkbox9		top: tituloRubro bottom + 20;		left: 250.	tituloPuntos		top: checkbox7 bottom + 20;		left: 10.	inputPuntos		top: tituloPuntos bottom + 20;		left: 10.	tituloProductos		top: inputPuntos bottom + 20;		left: 10.	checkbox1		top: tituloProductos bottom + 20;		left: 10.	checkbox2		top: tituloProductos bottom + 20;		left: 130.	checkbox3		top: tituloProductos bottom + 20;		left: 250.	checkbox4		top: checkbox1 bottom + 20;		left: 10.	checkbox5		top: checkbox1 bottom + 20;		left: 130.	checkbox6		top: checkbox1 bottom + 20;		left: 250! !!VentanaRegistrarEmpresa methodsFor: 'adding' stamp: 'LeonelBustamante 8/29/2021 18:03'!agregarBoton	| botonRegistro |	botonRegistro := Boton nombre: 'Registrar' tamanio: 200 @ 30.	botonRegistro		center: self center;		bottom: self bottom - 10;		color: (Color r: 0.0 g: 0.5 b: 0.8);		borderStyle: (RoundedBorder new				 cornerRadius: 5;				 width: 5;				 color: (Color r: 0.0 g: 0.5 b: 0.8)).	self addMorph: botonRegistro.	tabla setText: miGestor getColEmpresasSolicitantes.	"Logica"	botonRegistro mouseAction: [ "Se verifica que se cargo algun rubro"		| controlRubro rubro |		checkbox7 buttonMorph selected			ifTrue: [ 				rubro := checkbox7 label.				controlRubro := true ]			ifFalse: [ 				checkbox8 buttonMorph selected					ifTrue: [ 						rubro := checkbox8 label.						controlRubro := true ]					ifFalse: [ 						checkbox9 buttonMorph selected							ifTrue: [ 								rubro := checkbox9 label.								controlRubro := true ]							ifFalse: [ controlRubro := false ] ] ].		inputNombre isEmpty not & inputPuntos isEmpty not & controlRubro 			ifTrue: [ 				checkbox1 estado | checkbox2 estado | checkbox3 estado				| checkbox4 estado | checkbox5 estado | checkbox6 estado					ifTrue: [ 						| unaEmpresa unaColProductos |						unaColProductos := OrderedCollection new.						checkbox1 estado ifTrue: [ unaColProductos add: checkbox1 label ].						checkbox2 estado ifTrue: [ unaColProductos add: checkbox2 label ].						checkbox3 estado ifTrue: [ unaColProductos add: checkbox3 label ].						checkbox4 estado ifTrue: [ unaColProductos add: checkbox4 label ].						checkbox5 estado ifTrue: [ unaColProductos add: checkbox5 label ].						checkbox6 estado ifTrue: [ unaColProductos add: checkbox6 label ].						unaEmpresa := Combinada							              nombre: inputNombre input							              rubro: rubro							              puntos: inputPuntos input							              colProductos: unaColProductos.						miGestor registrarEmpresaSolicitante: unaEmpresa.						tabla setText: miGestor getColEmpresasSolicitantes ]					ifFalse: [ "Datos basicos controlados, ahora productos"						| unaEmpresa |						unaEmpresa := Empresa							              nombre: inputNombre input							              rubro: rubro							              puntos: inputPuntos input.						miGestor registrarEmpresaSolicitante: unaEmpresa.						tabla setText: miGestor getColEmpresasSolicitantes ] ] ]! !!VentanaRegistrarEmpresa methodsFor: 'initialization' stamp: 'LeonelBustamante 8/29/2021 03:58'!initialize	super initialize.	self		agregarLista: 'Empresas registradas';		agregarCampos;		agregarBoton.! !!VentanaRegistrarEmpresa methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/29/2021 15:44'!agregarProductos	tituloProductos := Texto		                   titulo: 'Marque si tiene productos'		                   tamanio: 20.	checkbox1 := Checkbox nombre: 'Pintura' tamanio: 100 @ 20.	checkbox2 := Checkbox nombre: 'Pincel' tamanio: 100 @ 20.	checkbox3 := Checkbox nombre: 'Colchon' tamanio: 100 @ 20.	checkbox4 := Checkbox nombre: 'Almohada' tamanio: 100 @ 20.	checkbox5 := Checkbox nombre: 'Monitor' tamanio: 100 @ 20.	checkbox6 := Checkbox nombre: 'Teclado' tamanio: 100 @ 20.	self		addMorph: tituloProductos;		addMorph: checkbox1;		addMorph: checkbox2;		addMorph: checkbox3;		addMorph: checkbox4;		addMorph: checkbox5;		addMorph: checkbox6.! !!VentanaRegistrarEmpresa methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/29/2021 15:45'!agregarRubros	tituloRubro := Texto titulo: 'Marque su categoria' tamanio: 20.	checkbox7 := Checkbox nombre: 'Pintureria' tamanio: 100 @ 20.	checkbox8 := Checkbox nombre: 'Colchoneria' tamanio: 100 @ 20.	checkbox9 := Checkbox nombre: 'Electro' tamanio: 100 @ 20.	self		addMorph: tituloRubro;		addMorph: checkbox7;		addMorph: checkbox8;		addMorph: checkbox9.! !Ventana subclass: #VentanaRegistrarPostulante	instanceVariableNames: 'inputDatos'	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Visual'!!VentanaRegistrarPostulante methodsFor: 'adding' stamp: 'LeonelBustamante 8/29/2021 22:07'!agregarBoton	| empresa persona |	empresa := Boton nombre: 'Registrar postulante Empresa' tamanio: 700 @ 30.	persona := Boton nombre: 'Registrar postulante Persona' tamanio: 700 @ 30.	empresa		center: self center;		top: self top + 350;		color: (Color r: 0.0 g: 0.5 b: 0.8);		borderStyle: (RoundedBorder new				 cornerRadius: 5;				 width: 5;				 color: (Color r: 0.0 g: 0.5 b: 0.8));		font: (LogicalFont				 familyName: StandardFonts defaultFont familyName				 pointSize: 15);		centerText.	persona		center: self center;		top: self top + 450;		color: (Color r: 0.0 g: 0.5 b: 0.8);		borderStyle: (RoundedBorder new				 cornerRadius: 5;				 width: 5;				 color: (Color r: 0.0 g: 0.5 b: 0.8));		font: (LogicalFont				 familyName: StandardFonts defaultFont familyName				 pointSize: 15);		centerText.	self addMorph: empresa.	self addMorph: persona.	"Logic"	empresa mouseAction: [ 		self cerrar.		VentanaRegistrarSolicitudDeTrabajo			titulo: 'Registrando Solicitud de trabajo'			gestor: miGestor ].	persona mouseAction: [ 		self cerrar.		VentanaRegistrarSolicitudDeServicio			titulo: 'Registrando Solicitud de servicio'			gestor: miGestor ]! !!VentanaRegistrarPostulante methodsFor: 'initialization' stamp: 'LeonelBustamante 8/29/2021 22:06'!initialize	super initialize.	self agregarBoton! !VentanaRegistrarPostulante subclass: #VentanaRegistrarPostulanteEmpresa	instanceVariableNames: 'inputRubro inputPuntos'	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Visual'!!VentanaRegistrarPostulanteEmpresa methodsFor: 'adding' stamp: 'LeonelBustamante 8/28/2021 04:57'!agregarCampos	| tituloDatos tituloRubro tituloPuntos |	"Creo el contenido"	tituloDatos  := Texto titulo: 'Ingrese datos' tamanio: 20.	tituloRubro  := Texto titulo: 'Ingrese rubro' tamanio: 20.	tituloPuntos := Texto titulo: 'Ingrese cantidad de puntos' tamanio: 20.	inputDatos  := TextBox nombre: 'Ingrese datos' tamanio: 450 @ 30.	inputRubro  := TextBox nombre: 'Ingrese rubro' tamanio: 450 @ 30.	inputPuntos  := TextBox nombre: 'Ingrese cantidad de puntos' tamanio: 450 @ 30.		"Agrego los morph"	self addMorph: tituloDatos .	self addMorph: tituloRubro .	self addMorph: tituloPuntos  .	self addMorph: inputDatos .	self addMorph: inputRubro .	self addMorph: inputPuntos  .		"Posiciones laterales"	tituloDatos  left: self left + 10.	tituloRubro  left: self left + 10.	tituloPuntos  left: self left + 10.	inputDatos  left: self left + 10.	inputRubro   left: self left + 10.	inputPuntos   left: self left + 10.	"Posiciones verticales"tituloDatos  top: self top + 200.	inputDatos  top: tituloDatos  bottom + 20.	tituloRubro  top: inputDatos  bottom + 20.	inputRubro  top: tituloRubro  bottom + 20.	tituloPuntos top: inputRubro  bottom + 20.	inputPuntos top: tituloPuntos  bottom + 20.! !!VentanaRegistrarPostulanteEmpresa methodsFor: 'adding' stamp: 'LeonelBustamante 8/28/2021 04:57'!agregarBoton	| botonRegistro |	botonRegistro := Boton nombre: 'Registrar' tamanio: 200 @ 30.	botonRegistro center: self center.	botonRegistro bottom: self bottom - 10.	botonRegistro color: (Color r: 0.0 g: 0.5 b: 0.8).	botonRegistro borderStyle: (RoundedBorder new			 cornerRadius: 5;			 width: 5;			 color: (Color r: 0.0 g: 0.5 b: 0.8)).	self addMorph: botonRegistro	"Logic"	"	b1 mouseAction: [ self registrarEmpresa ]"! !!VentanaRegistrarPostulanteEmpresa methodsFor: 'initialization' stamp: 'LeonelBustamante 8/3/2021 15:39'!initialize: aString	super initialize: aString.	self agregarCampos.	self agregarBoton! !VentanaRegistrarPostulante subclass: #VentanaRegistrarPostulantePersona	instanceVariableNames: 'inputAptitudes'	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Visual'!!VentanaRegistrarPostulantePersona methodsFor: 'initialization' stamp: 'LeonelBustamante 8/3/2021 16:00'!initialize: aString	super initialize: aString.	self agregarBoton.	self agregarCampos ! !!VentanaRegistrarPostulantePersona methodsFor: 'adding' stamp: 'LeonelBustamante 8/28/2021 04:57'!agregarCampos	| tituloDatos tituloAptitudes |	"Creo el contenido"	tituloDatos := Texto titulo: 'Ingrese datos' tamanio: 20.	tituloAptitudes := Texto titulo: 'Ingrese aptitudes' tamanio: 20.	inputDatos := TextBox nombre: 'Ingrese datos' tamanio: 450 @ 30.	inputAptitudes := TextBox nombre: 'Ingrese Aptitudes' tamanio: 450 @ 30.	"Agrego los morph"	self addMorph: tituloDatos.	self addMorph: tituloAptitudes.	self addMorph: inputDatos.	self addMorph: inputAptitudes.	"Posiciones laterales"	tituloDatos left: self left + 10.	tituloAptitudes left: self left + 10.	inputDatos left: self left + 10.	inputAptitudes left: self left + 10.	"Posiciones verticales"	tituloDatos top: self top + 200.	inputDatos top: tituloDatos bottom + 20.	tituloAptitudes top: inputDatos bottom + 20.	inputAptitudes top: tituloAptitudes bottom + 20! !!VentanaRegistrarPostulantePersona methodsFor: 'adding' stamp: 'LeonelBustamante 8/28/2021 04:57'!agregarBoton	| botonRegistro |	botonRegistro := Boton nombre: 'Registrar' tamanio: 200 @ 30.	botonRegistro center: self center.	botonRegistro bottom: self bottom - 10.	botonRegistro color: (Color r: 0.0 g: 0.5 b: 0.8).	botonRegistro borderStyle: (RoundedBorder new			 cornerRadius: 5;			 width: 5;			 color: (Color r: 0.0 g: 0.5 b: 0.8)).	self addMorph: botonRegistro	"Logic"	"	b1 mouseAction: [ self registrarEmpresa ]"! !Ventana subclass: #VentanaRegistrarSolicitud	instanceVariableNames: ''	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Visual'!!VentanaRegistrarSolicitud methodsFor: 'initialization' stamp: 'LeonelBustamante 8/29/2021 01:00'!initialize	super initialize.	self		agregarBoton.! !!VentanaRegistrarSolicitud methodsFor: 'adding' stamp: 'LeonelBustamante 8/29/2021 21:33'!agregarBoton	| empresa persona |	empresa := Boton		           nombre: 'Registrar solicitud de trabajo'		           tamanio: 700 @ 30.	persona := Boton		           nombre: 'Registrar solicitud de servicio'		           tamanio: 700 @ 30.	empresa		center: self center;		top: self top + 350;		color: (Color r: 0.0 g: 0.5 b: 0.8);		borderStyle: (RoundedBorder new				 cornerRadius: 5;				 width: 5;				 color: (Color r: 0.0 g: 0.5 b: 0.8));		font: (LogicalFont				 familyName: StandardFonts defaultFont familyName				 pointSize: 15);		centerText.	persona		center: self center;		top: self top + 450;		color: (Color r: 0.0 g: 0.5 b: 0.8);		borderStyle: (RoundedBorder new				 cornerRadius: 5;				 width: 5;				 color: (Color r: 0.0 g: 0.5 b: 0.8));		font: (LogicalFont				 familyName: StandardFonts defaultFont familyName				 pointSize: 15);		centerText.	self addMorph: empresa.	self addMorph: persona.	"Logic"	empresa mouseAction: [ 		self cerrar.		VentanaRegistrarSolicitudDeTrabajo			titulo: 'Registrando Solicitud de trabajo'			gestor: miGestor ].			persona mouseAction: [ 		self cerrar.		VentanaRegistrarSolicitudDeServicio			titulo: 'Registrando Solicitud de servicio'			gestor: miGestor ]! !VentanaRegistrarSolicitud subclass: #VentanaRegistrarSolicitudDeServicio	instanceVariableNames: 'tituloDescripcion checkboxRubro1 checkboxRubro2 checkboxRubro3 tituloDuracion inputDuracionDias inputDuracionMeses inputDuracionAnio tituloValor inputValor duracionProlongada tituloProductos checkboxProducto1 checkboxProducto2 checkboxProducto3 checkboxProducto4 checkboxProducto5 checkboxProducto6 tabla tituloTipoPago checkboxTipo1 checkboxTipo2 checkboxTipo3'	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Visual'!!VentanaRegistrarSolicitudDeServicio methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/29/2021 16:25'!agregarProductos	tituloProductos := Texto		                   titulo: 'Marque si tiene productos'		                   tamanio: 20.	checkboxProducto1 := Checkbox nombre: 'Pintura' tamanio: 100 @ 20.	checkboxProducto2 := Checkbox nombre: 'Pincel' tamanio: 100 @ 20.	checkboxProducto3 := Checkbox nombre: 'Colchon' tamanio: 100 @ 20.	checkboxProducto4 := Checkbox nombre: 'Almohada' tamanio: 100 @ 20.	checkboxProducto5 := Checkbox nombre: 'Monitor' tamanio: 100 @ 20.	checkboxProducto6 := Checkbox nombre: 'Teclado' tamanio: 100 @ 20.	self		addMorph: tituloProductos;		addMorph: checkboxProducto1;		addMorph: checkboxProducto2;		addMorph: checkboxProducto3;		addMorph: checkboxProducto4;		addMorph: checkboxProducto5;		addMorph: checkboxProducto6.! !!VentanaRegistrarSolicitudDeServicio methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/29/2021 20:41'!actualizarTabla	tabla setText: miGestor getColSolicitudesPendientes ! !!VentanaRegistrarSolicitudDeServicio methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/29/2021 17:01'!agregarRubros	tituloDescripcion := Texto titulo: 'Marque su categoria(descripcion)' tamanio: 20.	checkboxRubro1 := Checkbox nombre: 'Pintureria' tamanio: 100 @ 20.	checkboxRubro2 := Checkbox nombre: 'Colchoneria' tamanio: 100 @ 20.	checkboxRubro3 := Checkbox nombre: 'Electro' tamanio: 100 @ 20.	self		addMorph: tituloDescripcion;		addMorph: checkboxRubro1;		addMorph: checkboxRubro2;		addMorph: checkboxRubro3! !!VentanaRegistrarSolicitudDeServicio methodsFor: 'initialization' stamp: 'LeonelBustamante 8/29/2021 20:41'!initialize	super initialize.	self		agregarLista: 'Solicitudes de Servicio';		agregarCampos;		agregarBoton; actualizarTabla .! !!VentanaRegistrarSolicitudDeServicio methodsFor: 'adding' stamp: 'LeonelBustamante 8/29/2021 22:05'!agregarLista: aString	"Agrego titulo y lista"	| titulo |	titulo := Texto titulo: aString tamanio: 20.	tabla := RubScrolledTextMorph new.	tabla		extent: 500 @ 500;		beReadOnly.	self addMorph: titulo.	self addMorph: tabla.	"Posiciono"	titulo		left: self right - 700;		top: 150.	tabla		left: self right - 700;		top: 200! !!VentanaRegistrarSolicitudDeServicio methodsFor: 'adding' stamp: 'LeonelBustamante 8/29/2021 21:23'!agregarCampos	| advertencia |	tituloDuracion := Texto titulo: 'Ingrese una duracion' tamanio: 20.	advertencia := Texto		               titulo: 'Si es puntual dejar en blanco'		               tamanio: 10.	inputDuracionDias := TextBox nombre: 'dia' tamanio: 100 @ 100.	inputDuracionMeses := TextBox nombre: 'mes' tamanio: 100 @ 100.	inputDuracionAnio := TextBox nombre: 'anio' tamanio: 100 @ 100.	duracionProlongada := inputDuracionDias isEmpty	                      & inputDuracionMeses isEmpty	                      & inputDuracionAnio isEmpty		                      ifFalse: [ 			                      Date				                      newDay: inputDuracionDias input				                      month: inputDuracionMeses input				                      year: inputDuracionAnio input ]		                      ifTrue: [ Date today ].	tituloValor := Texto titulo: 'Ingrese el valor' tamanio: 20.	inputValor := TextBox		              nombre: 'Ingrese aqui el valor'		              tamanio: 450 @ 90.	tituloTipoPago := Texto titulo: 'Ingrese tipo de pago' tamanio: 20.	checkboxTipo1 := Checkbox nombre: 'Diario' tamanio: 100 @ 20.	checkboxTipo2 := Checkbox nombre: 'Semanal' tamanio: 100 @ 20.	checkboxTipo3 := Checkbox nombre: 'Mensual' tamanio: 100 @ 20.	self		agregarRubros;		agregarProductos;		addMorph: tituloDuracion;		addMorph: advertencia;		addMorph: inputDuracionDias;		addMorph: inputDuracionMeses;		addMorph: inputDuracionAnio;		addMorph: tituloValor;		addMorph: inputValor;		addMorph: tituloTipoPago;		addMorph: checkboxTipo1;		addMorph: checkboxTipo2;		addMorph: checkboxTipo3.	tituloDescripcion		left: 10;		top: 150.	checkboxRubro1		left: 10;		top: tituloDescripcion bottom + 20.	checkboxRubro2		left: 130;		top: tituloDescripcion bottom + 20.	checkboxRubro3		left: 250;		top: tituloDescripcion bottom + 20.	tituloDuracion		left: 10;		top: checkboxRubro1 bottom + 20.	advertencia		left: 10;		top: tituloDuracion bottom + 10.	inputDuracionDias		left: 10;		top: advertencia bottom + 10.	inputDuracionMeses		left: 130;		top: advertencia bottom + 10.	inputDuracionAnio		left: 250;		top: advertencia bottom + 10.	tituloValor		left: 10;		top: inputDuracionDias bottom + 20.	inputValor		left: 10;		top: tituloValor bottom + 20.	tituloTipoPago		left: 10;		top: inputValor bottom + 20.	checkboxTipo1		left: 10;		top: tituloTipoPago bottom + 20.	checkboxTipo2		left: 130;		top: tituloTipoPago bottom + 20.	checkboxTipo3		left: 250;		top: tituloTipoPago bottom + 20.	tituloProductos		left: self left + 10;		top: checkboxTipo1 bottom + 20.	checkboxProducto1		left: self left + 10;		top: tituloProductos bottom + 20.	checkboxProducto2		left: self left + 130;		top: tituloProductos bottom + 20.	checkboxProducto3		left: self left + 250;		top: tituloProductos bottom + 20.	checkboxProducto4		left: self left + 10;		top: checkboxProducto1 bottom + 20.	checkboxProducto5		left: self left + 130;		top: checkboxProducto1 bottom + 20.	checkboxProducto6		left: self left + 250;		top: checkboxProducto1 bottom + 20! !!VentanaRegistrarSolicitudDeServicio methodsFor: 'adding' stamp: 'LeonelBustamante 8/29/2021 20:49'!agregarBoton	| botonRegistro |	botonRegistro := Boton nombre: 'Registrar' tamanio: 200 @ 30.	botonRegistro		center: self center;		bottom: self bottom - 10;		color: (Color r: 0.0 g: 0.5 b: 0.8);		borderStyle: (RoundedBorder new				 cornerRadius: 5;				 width: 5;				 color: (Color r: 0.0 g: 0.5 b: 0.8)).	self addMorph: botonRegistro.	botonRegistro mouseAction: [ 		| hoy x controlRubro rubro controlTP tipoPago |		hoy := Date today.		x := (duracionProlongada subtractDate: hoy) + 1.		checkboxRubro1 estado			ifTrue: [ 				rubro := checkboxRubro1 label.				controlRubro := true ]			ifFalse: [ 				checkboxRubro2 estado					ifTrue: [ 						rubro := checkboxRubro2 label.						controlRubro := true ]					ifFalse: [ 						checkboxRubro3 estado							ifTrue: [ 								rubro := checkboxRubro3 label.								controlRubro := true ]							ifFalse: [ controlRubro := false ] ] ].		checkboxTipo1 estado			ifTrue: [ 				tipoPago := checkboxTipo1 label.				controlTP := true ]			ifFalse: [ 				checkboxTipo2 estado					ifTrue: [ 						tipoPago := checkboxTipo2 label.						controlTP := true ]					ifFalse: [ 						checkboxTipo3 estado							ifTrue: [ 								tipoPago := checkboxTipo3 label.								controlTP := true ]							ifFalse: [ controlTP := false ] ] ].		controlRubro & controlTP & inputValor isEmpty not ifTrue: [ 			{ 				checkboxProducto1.				checkboxProducto2.				checkboxProducto3.				checkboxProducto4.				checkboxProducto5.				checkboxProducto6 } estado				ifFalse: [ 					| unaSolicitud |					unaSolicitud := DeServicio						                descripcion: rubro						                duracion: x						                valor: inputValor input						                tipoPago: tipoPago.					miGestor registrarSolicitud: unaSolicitud.					tabla setText: miGestor getColSolicitudesPendientes ]				ifTrue: [ 					| unaColCestaProductos unaSolicitud |					unaColCestaProductos := OrderedCollection new.					checkboxProducto1 estado ifTrue: [ 						unaColCestaProductos add: checkboxProducto1 label ].					checkboxProducto2 estado ifTrue: [ 						unaColCestaProductos add: checkboxProducto2 label ].					checkboxProducto3 estado ifTrue: [ 						unaColCestaProductos add: checkboxProducto3 label ].					checkboxProducto4 estado ifTrue: [ 						unaColCestaProductos add: checkboxProducto4 label ].					checkboxProducto5 estado ifTrue: [ 						unaColCestaProductos add: checkboxProducto5 label ].					checkboxProducto6 estado ifTrue: [ 						unaColCestaProductos add: checkboxProducto6 label ].					unaSolicitud := ConProductos						                descripcion: rubro						                duracion: x						                valor: inputValor input						                tipoPago: tipoPago						                colCestaProductos: unaColCestaProductos.					miGestor registrarSolicitud: unaSolicitud.					tabla setText: miGestor getColSolicitudesPendientes ] ] ]! !VentanaRegistrarSolicitud subclass: #VentanaRegistrarSolicitudDeTrabajo	instanceVariableNames: 'tabla tituloValor inputValor tituloDescripcion checkboxRubro1 checkboxRubro2 checkboxRubro3'	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Visual'!!VentanaRegistrarSolicitudDeTrabajo methodsFor: 'adding' stamp: 'LeonelBustamante 8/29/2021 22:04'!agregarLista: aString	"Agrego titulo y lista"	| titulo |	titulo := Texto titulo: aString tamanio: 20.	tabla := RubScrolledTextMorph new.	tabla		extent: 500 @ 500;		beReadOnly.	self addMorph: titulo.	self addMorph: tabla.	"Posiciono"	titulo		left: self right - 700;		top: 150.	tabla		left: self right - 700;		top: 200! !!VentanaRegistrarSolicitudDeTrabajo methodsFor: 'adding' stamp: 'LeonelBustamante 8/29/2021 21:30'!agregarCampos	tituloValor := Texto titulo: 'Ingrese el valor' tamanio: 20.	inputValor := TextBox		              nombre: 'Ingrese aqui el valor'		              tamanio: 450 @ 90.	self		agregarRubros;		addMorph: tituloValor;		addMorph: inputValor.	tituloDescripcion		left: 10;		top: 150.	checkboxRubro1		left: 10;		top: tituloDescripcion bottom + 20.	checkboxRubro2		left: 130;		top: tituloDescripcion bottom + 20.	checkboxRubro3		left: 250;		top: tituloDescripcion bottom + 20.	tituloValor		left: 10;		top: checkboxRubro1  bottom + 20.	inputValor		left: 10;		top: tituloValor bottom + 20.! !!VentanaRegistrarSolicitudDeTrabajo methodsFor: 'adding' stamp: 'LeonelBustamante 8/29/2021 22:00'!agregarBoton	| botonRegistro |	botonRegistro := Boton nombre: 'Registrar' tamanio: 200 @ 30.	botonRegistro		center: self center;		bottom: self bottom - 10;		color: (Color r: 0.0 g: 0.5 b: 0.8);		borderStyle: (RoundedBorder new				 cornerRadius: 5;				 width: 5;				 color: (Color r: 0.0 g: 0.5 b: 0.8)).	self addMorph: botonRegistro.	botonRegistro mouseAction: [ 		|rubro controlRubro|				checkboxRubro1 estado			ifTrue: [ 				rubro := checkboxRubro1 label.				controlRubro := true ]			ifFalse: [ 				checkboxRubro2 estado					ifTrue: [ 						rubro := checkboxRubro2 label.						controlRubro := true ]					ifFalse: [ 						checkboxRubro3 estado							ifTrue: [ 								rubro := checkboxRubro3 label.								controlRubro := true ]							ifFalse: [ controlRubro := false ] ] ].		controlRubro & inputValor isEmpty not ifTrue: [  					| unaSolicitud |					unaSolicitud := DeTrabajo 						                descripcion: rubro  valor: inputValor input.					miGestor registrarSolicitud: unaSolicitud.					tabla setText: miGestor getColSolicitudesPendientes ]]! !!VentanaRegistrarSolicitudDeTrabajo methodsFor: 'initialization' stamp: 'LeonelBustamante 8/29/2021 21:33'!initialize	super initialize.	self		agregarLista: 'Solicitudes de trabajo';		agregarCampos;		agregarBoton;		actualizarTabla! !!VentanaRegistrarSolicitudDeTrabajo methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/29/2021 21:32'!actualizarTabla	tabla setText: miGestor getColSolicitudesPendientes! !!VentanaRegistrarSolicitudDeTrabajo methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/29/2021 21:31'!agregarRubros	tituloDescripcion := Texto		                     titulo: 'Marque su categoria(descripcion)'		                     tamanio: 20.	checkboxRubro1 := Checkbox nombre: 'Pintureria' tamanio: 100 @ 20.	checkboxRubro2 := Checkbox nombre: 'Colchoneria' tamanio: 100 @ 20.	checkboxRubro3 := Checkbox nombre: 'Electro' tamanio: 100 @ 20.	self		addMorph: tituloDescripcion;		addMorph: checkboxRubro1;		addMorph: checkboxRubro2;		addMorph: checkboxRubro3! !SimpleButtonMorph subclass: #Boton	instanceVariableNames: 'id aBlock'	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Componentes'!!Boton methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/3/2021 21:03'!centerTextlabel center:self center.! !!Boton methodsFor: 'as yet unclassified'!mouseAction:aEvent aBlock :=aEvent! !!Boton methodsFor: 'accessing'!font:aFontlabel font:aFont! !!Boton methodsFor: 'accessing' stamp: 'LeonelBustamante 8/28/2021 05:02'!textColor:aColor label color:aColor.! !!Boton methodsFor: 'event handling'!mouseUp:aEvent super mouseUp:aEvent.aBlock value.! !!Boton methodsFor: 'initialization' stamp: 'LeonelBustamante 8/28/2021 04:58'!initializeButton: aName"Inicializador Boton"	self label: aName! !!Boton methodsFor: 'updating' stamp: 'LeonelBustamante 8/10/2021 17:51'!changed	self changed: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Boton class	instanceVariableNames: ''!!Boton class methodsFor: 'constructor' stamp: 'LeonelBustamante 8/28/2021 04:57'!nombre: unNombre tamanio: unTamanio	| temp |	temp := self new.	temp initializeButton: unNombre.	temp color: Color gray.	temp extent: unTamanio.	temp textColor: Color white.	^ temp! !CheckboxMorph subclass: #Checkbox	instanceVariableNames: ''	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Componentes'!!Checkbox methodsFor: 'as yet unclassified' stamp: 'LeonelBustamante 8/29/2021 15:11'!estado^self buttonMorph selected! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Checkbox class	instanceVariableNames: ''!!Checkbox class methodsFor: 'constructor' stamp: 'LeonelBustamante 8/29/2021 15:48'!nombre: unNombre tamanio: unTamanio	| temp aux |	temp := self new.	aux := StringMorph contents: unNombre.	temp		label: unNombre;		extent: 100 @ 20.	^ temp! !RubTextFieldMorph subclass: #TextBox	instanceVariableNames: ''	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Componentes'!!TextBox methodsFor: 'as yet unclassified'!isEmpty^(((self text)asString)='').! !!TextBox methodsFor: 'as yet unclassified'!clearself setText:''.! !!TextBox methodsFor: 'as yet unclassified'!ghostColor:aColorself withRulerNamed: #ghostText.self ghostTextRuler textColor:(aColor).! !!TextBox methodsFor: 'as yet unclassified'!input^(self text) asString.! !!TextBox methodsFor: 'deAplicacion'!estilo self borderStyle:(BottomBorder new width:2);color:Color transparent;borderColor:(Color black).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!TextBox class	instanceVariableNames: ''!!TextBox class methodsFor: 'as yet unclassified'!create:aText size:aSize|temp|temp :=self new.temp ghostText: aText.temp extent:aSize.temp borderStyle:(BottomBorder new width:2).temp color:Color transparent.temp ghostColor:(Theme ghostText).temp borderColor:(Color black).^temp.! !!TextBox class methodsFor: 'as yet unclassified'!create:aText |temp aux|aux:=StringMorph contents: aText.temp :=self new.temp ghostText: aText.temp extent: aux extent+10.^temp.! !!TextBox class methodsFor: 'constructor' stamp: 'LeonelBustamante 8/28/2021 05:06'!nombre: aText tamanio: aSize	"Constructor cajas de texto"	| temp |	temp := self new.	temp		ghostText: aText;		borderStyle: (BottomBorder new width: 2);		font: (LogicalFont				 familyName: StandardFonts defaultFont familyName				 pointSize: 20);		extent: aSize;		color: Color transparent;		borderColor: Color black.			^ temp! !StringMorph subclass: #Texto	instanceVariableNames: ''	classVariableNames: ''	package: 'PromocionPOO2021-Logica-Componentes'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Texto class	instanceVariableNames: ''!!Texto class methodsFor: 'constructor' stamp: 'LeonelBustamante 8/28/2021 05:07'!titulo: nombreCampo tamanio: tamanio"Constructor de Morph Text"	| aString |	aString := self new.	aString contents: nombreCampo.	aString font: (LogicalFont			 familyName: StandardFonts defaultFont familyName			 pointSize: tamanio).	^ aString! !!Texto class methodsFor: 'constructor' stamp: 'LeonelBustamante 8/28/2021 05:08'!titulo: nombreCampo	"Constructor de Morph Text"	| aString |	aString := self new.	aString contents: nombreCampo.	aString font: (LogicalFont			 familyName: StandardFonts defaultFont familyName			 pointSize: 30).	^ aString! !